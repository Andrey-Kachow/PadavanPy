def exercise_12_7_3():

    per_cent = {'ТКБ': 5.6, 'СКБ': 5.9, 'ВТБ': 4.28, 'СБЕР': 4.0}

    money = int(input("Пожалуйста, введите сумму вклада >>> "))


    '''
        Первый способ. Сохраняем в новой переменной deposit список (квадратные скобочки).
        В списке мы записваем четыре выражения, которые расчитывают прибыль в том или ином банке.
        Чтобы получить процентную ставку, нужно обратиться к элементу словаря per_cent,
        который назван именем банка. money - это величина вклада. умножаем величину вклада на процент
        в банке, а затем также умножаем на одну сотую (0.01), потому что один процент - это одна сотая.
        Так делаем четыре раза для каждого банка.
        Необходимо, чтобы в списке было четыре целых числа, поэтому оборачиваем каждое выражение внутри
        вызова функции int(). Таким образом дробное число станет целым. Например 123.0 --> 123
        
        Затем выводим результат функцией print.
        
        Способ нехороший, потому что присутствует повторение похожих выражений, а также само выражение
        очень длинное, занимает 4 строчки.
        
        Англ яз и питон:
        
            money   - деньги
            deposit - вклад
            int     - это сокращение от integer. что в переводе означает "целое число"
    '''
    deposit = [
        int(per_cent['ТКБ'] * money * 0.01),
        int(per_cent['СКБ'] * money * 0.01),
        int(per_cent['ВТБ'] * money * 0.01), 
        int(per_cent['СБЕР'] * money * 0.01)
    ]
    print(deposit)


    '''
        Второй способ. Создаем пустой список, а именно [].
        Помещаем это значение в  переменную deposit.
        Затем создаем четыре переменные, отвечающие за прибыль в каждом банке.
        Считаем прибыль по такому же принципу, что и в первом варианте.
        Затем значение каждой переменной кладем в список, при помощи метода .append()
        Не забываем переводить дробное число в целое с помощью функции int.
        
        Затем выводим с помощью print
        
        Англ яз и питон:
            
            append - добавить, прикрепить, прилепить.
            income - прибыль. Денежная или иная.
    '''
    # Slightly better dummy way
    deposit = []

    income_tkb = per_cent['ТКБ'] * money * 0.01
    income_skb = per_cent['СКБ'] * money * 0.01
    income_vtb = per_cent['ВТБ'] * money * 0.01
    income_sber = per_cent['СБЕР'] * money * 0.01

    deposit.append(int(income_tkb))
    deposit.append(int(income_skb))
    deposit.append(int(income_vtb))
    deposit.append(int(income_sber))

    print(deposit)


    '''
        Способ третий. Исользование цикла for.
        Аналогичен второму, но мы не пишем одно и тоже четыре раза.
        
        Вычисляем прибыль и добавляем ее для каждого банка в словаре per_cent.
        
        Код внутри цикла, а именно две строчки с отступом после строчки с заголовком цикла for,
        исполнится четыре раза, потому что в словаре per_cent четыре элемента.
        По одному повтору за элемент.
        
        Англ яз и питон:
        
        На английском языке заголовок цикла буквально читается как:
            
            "ДЛЯ каждого банка В перечислении банков, сделайте следующее:"
            
            "FOR each bank IN the following banks, do the following:"
            
            for -  для
            in - в
    '''
    # The imperative nice way with for loop
    deposit = []
    for bank in per_cent:
        income = per_cent[bank] * money * 0.01
        deposit.append(int(income))

    print(deposit)


    '''
        Способ четвертый. Очень заморочный, для самых занудливых адептов
        функционального программирования и лямбда-исчисления.
        Оставлю здесь для краткого ознакомления, но не для изучения. Пока рано
    '''
    # The functional nice way with lambda function
    deposit = list(map(lambda rate: int(rate * money * 0.01), per_cent.values()))

    print(deposit)


def exercise_13_8_19():

    num_tickets = int(input("Пожалуйста, введите сколько билетов желаете приобрести.\n> "))

    ages = [int(input("Введите возраст %d-го участника конференции.\n> " % client_num)) for client_num in range(1, num_tickets + 1)]

    total_price = 0
    for age in ages:
        if age >= 25:
            total_price += 1390
        elif age >= 18:
            total_price += 990

    if num_tickets > 3:
        total_price = int(0.9 * total_price)
        # total_price = total_price - total_price / 10

    print("Итоговая стоимость билетов составляет %d рублей." % total_price)


if __name__ == '__main__':

    exercise_13_8_19()
