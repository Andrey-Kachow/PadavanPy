Задания.

1. Реализовать сортировку строк, хранящихся в двусвязном списке.

Условия для оценки 3

Двусвязный список следует организовать через структуру ListEntry (хранящую ссылки на два соседних элемента), с помощью которой можно организовать список любых сущностей, не изменяя код работы со списком. Эта структура включается в структуру с полезными данными. Всё логика работы со списком реализуется на уровне структур ListEntry (а не объемлющей структуры). То есть, например, "поменять местами два элемента" должно означать изменение ссылок внутри элементов типа ListEntry (и никак не затрагивать полезные данные).
Реализовать пузырьковую сортировку списка.


Условия для оценки 4

Реализовать быструю сортировку списка.


Шаблон для задания в каталоге template\1.




2. Реализовать ассоциативные массивы, позволяющие сопоставлять ключу (произвольной строке) значение (произвольную строку).

Условия для оценки 3

Реализовать ассоциативные массивы на основе двух контейнеров:
1) на основе двоичного дерева поиска и 2) на основе массива переменной (изменяющейся в процессе выполнения) длины без сортировки ключей. Должны поддерживаться операции: вставка пары (ключ, значение), поиск значения по ключу, удаление узла, очистка контейнера.
Реализовать программу, демонстрирующую возможности ассоциативных массивов.
Реализовать тесты для оценки быстродействия операций (вставки, удаления, поиска) с этими ассоциативными массивами на большом количестве данных (>= 1000000).


Условия для оценки 4

Дополнительно реализовать ассоциативный массив на основе хэш-таблицы. Реализовать соответствующие тесты. Протестировать при разных хэш-функциях и размерах пространства ключей.


Шаблон для задания в каталоге template\2.
